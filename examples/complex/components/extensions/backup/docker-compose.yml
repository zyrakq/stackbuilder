version: '3.8'

services:
  # PostgreSQL backup service
  postgres-backup:
    image: prodrigestivill/postgres-backup-local:14
    environment:
      - POSTGRES_HOST=database
      - POSTGRES_DB=appdb,keycloak
      - POSTGRES_USER=${POSTGRES_BACKUP_USER:-backup_user}
      - POSTGRES_PASSWORD=${POSTGRES_BACKUP_PASSWORD:-backup_pass}
      - POSTGRES_EXTRA_OPTS=-Z6 --schema=public --blobs
      - SCHEDULE=@daily
      - BACKUP_KEEP_DAYS=7
      - BACKUP_KEEP_WEEKS=4
      - BACKUP_KEEP_MONTHS=6
      - HEALTHCHECK_PORT=8080
    volumes:
      - postgres_backups:/backups
      - ./postgres-backup/scripts:/scripts:ro
    depends_on:
      - database
    networks:
      - backup
      - backend
    restart: unless-stopped

  # Redis backup service
  redis-backup:
    image: redis:6-alpine
    command: |
      sh -c "
        while true; do
          echo 'Starting Redis backup...'
          redis-cli -h cache BGSAVE
          sleep 10
          redis-cli -h cache SAVE
          cp /data/dump.rdb /backups/redis-backup-$$(date +%Y%m%d_%H%M%S).rdb
          find /backups -name 'redis-backup-*.rdb' -mtime +7 -delete
          echo 'Redis backup completed'
          sleep 86400
        done
      "
    volumes:
      - redis_backups:/backups
      - redis_data:/data:ro
    depends_on:
      - cache
    networks:
      - backup
      - backend
    restart: unless-stopped

  # File system backup with restic
  restic-backup:
    image: restic/restic:0.14.0
    environment:
      - RESTIC_REPOSITORY=/backups/restic-repo
      - RESTIC_PASSWORD=${RESTIC_PASSWORD:-restic123}
      - BACKUP_SCHEDULE=0 2 * * *
    volumes:
      - restic_backups:/backups
      - web_data:/data/web:ro
      - postgres_data:/data/postgres:ro
      - redis_data:/data/redis:ro
      - ./restic/scripts:/scripts:ro
    command: |
      sh -c "
        restic init --repo /backups/restic-repo || true
        while true; do
          echo 'Starting restic backup...'
          restic backup /data --repo /backups/restic-repo --tag automated
          restic forget --repo /backups/restic-repo --keep-daily 7 --keep-weekly 4 --keep-monthly 12 --prune
          echo 'Restic backup completed'
          sleep 86400
        done
      "
    networks:
      - backup
    restart: unless-stopped

  # Minio S3-compatible object storage for backups
  minio:
    image: quay.io/minio/minio:RELEASE.2022-11-17T23-20-09Z
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-minioadmin}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-minioadmin123}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
      - ./minio/policies:/policies:ro
    networks:
      - backup
      - frontend
    restart: unless-stopped

  # Minio client for backup automation
  minio-backup:
    image: minio/mc:RELEASE.2022-11-17T21-20-39Z
    environment:
      - MC_HOST_minio=http://${MINIO_ROOT_USER:-minioadmin}:${MINIO_ROOT_PASSWORD:-minioadmin123}@minio:9000
    volumes:
      - postgres_backups:/source/postgres:ro
      - redis_backups:/source/redis:ro
      - restic_backups:/source/restic:ro
      - ./minio-backup/scripts:/scripts:ro
    command: |
      sh -c "
        while ! mc admin info minio; do
          echo 'Waiting for MinIO...'
          sleep 5
        done
        mc mb minio/backups || true
        mc policy set download minio/backups
        while true; do
          echo 'Syncing backups to MinIO...'
          mc mirror /source/postgres minio/backups/postgres/
          mc mirror /source/redis minio/backups/redis/
          mc mirror /source/restic minio/backups/restic/
          echo 'Backup sync completed'
          sleep 3600
        done
      "
    depends_on:
      - minio
      - postgres-backup
      - redis-backup
      - restic-backup
    networks:
      - backup
    restart: unless-stopped

  # Backup monitoring and alerting
  backup-monitor:
    image: prom/blackbox-exporter:v0.22.0
    volumes:
      - ./backup-monitor/blackbox.yml:/etc/blackbox_exporter/config.yml:ro
    ports:
      - "9116:9115"
    networks:
      - backup
      - monitoring
    restart: unless-stopped

  # Backup rotation and cleanup service
  backup-cleaner:
    image: alpine:3.17
    command: |
      sh -c "
        apk add --no-cache findutils
        while true; do
          echo 'Starting backup cleanup...'
          find /backups/postgres -name '*.sql' -mtime +30 -delete
          find /backups/redis -name '*.rdb' -mtime +14 -delete
          find /backups/restic -name '*.log' -mtime +7 -delete
          echo 'Backup cleanup completed'
          sleep 86400
        done
      "
    volumes:
      - postgres_backups:/backups/postgres
      - redis_backups:/backups/redis
      - restic_backups:/backups/restic
    networks:
      - backup
    restart: unless-stopped

  # Backup verification service
  backup-verify:
    image: postgres:13-alpine
    environment:
      - POSTGRES_HOST=database
      - POSTGRES_USER=${POSTGRES_BACKUP_USER:-backup_user}
      - POSTGRES_PASSWORD=${POSTGRES_BACKUP_PASSWORD:-backup_pass}
    volumes:
      - postgres_backups:/backups:ro
      - ./backup-verify/scripts:/scripts:ro
    command: |
      sh -c "
        while true; do
          echo 'Starting backup verification...'
          /scripts/verify-postgres-backup.sh
          echo 'Backup verification completed'
          sleep 86400
        done
      "
    depends_on:
      - postgres-backup
    networks:
      - backup
      - backend
    restart: unless-stopped

volumes:
  postgres_backups:
    driver: local
  redis_backups:
    driver: local
  restic_backups:
    driver: local
  minio_data:
    driver: local

networks:
  backup:
    driver: bridge
