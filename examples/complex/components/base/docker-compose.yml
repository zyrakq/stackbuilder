version: '3.8'

services:
  # Core web application
  web:
    image: nginx:1.21-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - web_data:/var/www/html
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - frontend
      - backend

  # Application backend
  app:
    image: node:16-alpine
    working_dir: /app
    volumes:
      - ./app:/app
      - node_modules:/app/node_modules
    environment:
      - NODE_ENV=production
      - PORT=3000
    expose:
      - "3000"
    depends_on:
      - database
      - cache
    restart: unless-stopped
    networks:
      - backend

  # Database service
  database:
    image: postgres:13-alpine
    environment:
      - POSTGRES_DB=appdb
      - POSTGRES_USER=appuser
      - POSTGRES_PASSWORD=secure_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    expose:
      - "5432"
    restart: unless-stopped
    networks:
      - backend

  # Redis cache
  cache:
    image: redis:6-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    expose:
      - "6379"
    restart: unless-stopped
    networks:
      - backend

volumes:
  web_data:
  node_modules:
  postgres_data:
  redis_data:


networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
    internal: true
