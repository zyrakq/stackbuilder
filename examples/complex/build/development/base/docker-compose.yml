version: '3.8'
services:
  # Development-specific overrides
  web:
    image: nginx:1.21-alpine
    ports:
      - "80:80"
      - "443:443"
      - "8080:80" # Different port for development
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - web_data:/var/www/html
      - ./nginx-dev.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - frontend
      - backend
    environment:
      - DEBUG=true
  # Application backend
  app:
    image: node:16-alpine
    working_dir: /app
    volumes:
      - ./app:/app
      - node_modules:/app/node_modules
      - ./app:/app
      - ./app/src:/app/src:cached # Hot reload support
      - node_modules:/app/node_modules
    environment:
      - NODE_ENV=production
      - PORT=3000
      - NODE_ENV=development
      - DEBUG=*
      - HOT_RELOAD=true
    expose:
      - "3000"
    depends_on:
      - database
      - cache
    restart: unless-stopped
    networks:
      - backend
    command: npm run dev
    ports:
      - "3000:3000" # Expose for direct access in dev
  # Database service
  database:
    image: postgres:13-alpine
    environment:
      - POSTGRES_DB=appdb
      - POSTGRES_USER=appuser
      - POSTGRES_PASSWORD=secure_password
      - POSTGRES_DB=appdb_dev
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=devpass
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    expose:
      - "5432"
    restart: unless-stopped
    networks:
      - backend
    ports:
      - "5432:5432" # Expose for development tools
  # Redis cache
  cache:
    image: redis:6-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    expose:
      - "6379"
    restart: unless-stopped
    networks:
      - backend
    ports:
      - "6379:6379" # Expose for development tools
  # Development-only services
  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025" # SMTP
      - "8025:8025" # Web UI
    networks:
      - backend
volumes:
  web_data:
  # Use named volumes for faster file access in development
  node_modules:
    driver: local
  postgres_data:
  redis_data:
networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
    internal: true
