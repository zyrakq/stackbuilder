---
version: "3.8"
services:
  web:
    image: "nginx:1.21-alpine"
    ports:
      - "80:80"
      - "443:443"
      - "8080:80"
    volumes:
      - "./nginx.conf:/etc/nginx/nginx.conf:ro"
      - "web_data:/var/www/html"
      - "./nginx-dev.conf:/etc/nginx/nginx.conf:ro"
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - frontend
      - backend
    environment:
      - DEBUG=true
  app:
    image: "node:16-alpine"
    working_dir: /app
    volumes:
      - "./app:/app"
      - "node_modules:/app/node_modules"
      - "./app:/app"
      - "./app/src:/app/src:cached"
      - "node_modules:/app/node_modules"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - NODE_ENV=development
      - DEBUG=*
      - HOT_RELOAD=true
    expose:
      - "3000"
    depends_on:
      - database
      - cache
    restart: unless-stopped
    networks:
      - backend
    command: npm run dev
    ports:
      - "3000:3000"
  database:
    image: "postgres:13-alpine"
    environment:
      - POSTGRES_DB=appdb
      - POSTGRES_USER=appuser
      - POSTGRES_PASSWORD=secure_password
      - POSTGRES_DB=appdb_dev
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=devpass
    volumes:
      - "postgres_data:/var/lib/postgresql/data"
      - "./init.sql:/docker-entrypoint-initdb.d/init.sql:ro"
    expose:
      - "5432"
    restart: unless-stopped
    networks:
      - backend
    ports:
      - "5432:5432"
  cache:
    image: "redis:6-alpine"
    command: redis-server --appendonly yes
    volumes:
      - "redis_data:/data"
    expose:
      - "6379"
    restart: unless-stopped
    networks:
      - backend
    ports:
      - "6379:6379"
  mailhog:
    image: "mailhog/mailhog:latest"
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - backend
  keycloak:
    image: "quay.io/keycloak/keycloak:20.0"
    command: start-dev
    environment:
      - KEYCLOAK_ADMIN=admin
      - "KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_PASSWORD:-admin123}"
      - KC_DB=postgres
      - "KC_DB_URL=jdbc:postgresql://keycloak-db:5432/keycloak"
      - KC_DB_USERNAME=keycloak
      - "KC_DB_PASSWORD=${KEYCLOAK_DB_PASSWORD:-keycloak123}"
      - KC_HOSTNAME=localhost
      - KC_HTTP_ENABLED=true
      - KC_PROXY=edge
    ports:
      - "8180:8080"
    volumes:
      - "./keycloak/themes:/opt/keycloak/themes:ro"
      - "./keycloak/imports:/opt/keycloak/data/import:ro"
    depends_on:
      - keycloak-db
    networks:
      - auth
      - frontend
    restart: unless-stopped
  keycloak-db:
    image: "postgres:13-alpine"
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=keycloak
      - "POSTGRES_PASSWORD=${KEYCLOAK_DB_PASSWORD:-keycloak123}"
    volumes:
      - "keycloak_db_data:/var/lib/postgresql/data"
    networks:
      - auth
    restart: unless-stopped
  oauth2-proxy:
    image: "quay.io/oauth2-proxy/oauth2-proxy:v7.4.0"
    command:
      - "--config=/etc/oauth2-proxy.cfg"
    ports:
      - "4180:4180"
    volumes:
      - "./oauth2-proxy.cfg:/etc/oauth2-proxy.cfg:ro"
    environment:
      - "OAUTH2_PROXY_CLIENT_ID=${OAUTH2_CLIENT_ID}"
      - "OAUTH2_PROXY_CLIENT_SECRET=${OAUTH2_CLIENT_SECRET}"
      - "OAUTH2_PROXY_COOKIE_SECRET=${OAUTH2_COOKIE_SECRET}"
    depends_on:
      - keycloak
    networks:
      - auth
      - frontend
      - backend
    restart: unless-stopped
  openldap:
    image: "osixia/openldap:1.5.0"
    environment:
      - LDAP_ORGANISATION=Example Corp
      - LDAP_DOMAIN=example.com
      - "LDAP_ADMIN_PASSWORD=${LDAP_ADMIN_PASSWORD:-admin123}"
      - "LDAP_CONFIG_PASSWORD=${LDAP_CONFIG_PASSWORD:-config123}"
      - LDAP_READONLY_USER=true
      - LDAP_READONLY_USER_USERNAME=readonly
      - "LDAP_READONLY_USER_PASSWORD=${LDAP_READONLY_PASSWORD:-readonly123}"
    ports:
      - "389:389"
      - "636:636"
    volumes:
      - "ldap_data:/var/lib/ldap"
      - "ldap_config:/etc/ldap/slapd.d"
      - "./ldap/bootstrap:/container/service/slapd/assets/config/bootstrap/ldif/custom:ro"
    networks:
      - auth
    restart: unless-stopped
  phpldapadmin:
    image: "osixia/phpldapadmin:0.9.0"
    environment:
      - PHPLDAPADMIN_LDAP_HOSTS=openldap
      - PHPLDAPADMIN_HTTPS=false
    ports:
      - "8181:80"
    depends_on:
      - openldap
    networks:
      - auth
      - frontend
    restart: unless-stopped
  freeradius:
    image: "freeradius/freeradius-server:3.2.0"
    ports:
      - "1812:1812/udp"
      - "1813:1813/udp"
    volumes:
      - "./freeradius/clients.conf:/etc/freeradius/3.0/clients.conf:ro"
      - "./freeradius/users:/etc/freeradius/3.0/mods-config/files/authorize:ro"
      - "freeradius_logs:/var/log/freeradius"
    networks:
      - auth
    restart: unless-stopped
  vault:
    image: "vault:1.12.0"
    cap_add:
      - IPC_LOCK
    environment:
      - "VAULT_DEV_ROOT_TOKEN_ID=${VAULT_ROOT_TOKEN:-root}"
      - "VAULT_DEV_LISTEN_ADDRESS=0.0.0.0:8200"
      - "VAULT_ADDR=http://127.0.0.1:8200"
    ports:
      - "8200:8200"
    volumes:
      - "vault_data:/vault/data"
      - "./vault/config:/vault/config:ro"
    networks:
      - auth
      - backend
    restart: unless-stopped
  consul:
    image: "consul:1.14.0"
    command: agent -server -bootstrap -ui -client=0.0.0.0
    ports:
      - "8500:8500"
      - "8600:8600/udp"
    volumes:
      - "consul_data:/consul/data"
      - "./consul/config:/consul/config:ro"
    networks:
      - auth
      - backend
    restart: unless-stopped
volumes:
  web_data:
  node_modules:
    driver: local
  postgres_data:
  redis_data:
  keycloak_db_data:
    driver: local
  ldap_data:
    driver: local
  ldap_config:
    driver: local
  freeradius_logs:
    driver: local
  vault_data:
    driver: local
  consul_data:
    driver: local
networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
    internal: true
  auth:
    driver: bridge